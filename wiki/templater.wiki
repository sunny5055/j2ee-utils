=templater=

==Getting started==

===Spring configuration===

Define a *FreeMarkerConfigurationFactoryBean* as following :

{{{
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	<context:component-scan base-package="com.google" />
	<context:annotation-config />


	<bean id="freemarkerConfiguration"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="templates/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

</beans>
}}}

Assume you have a template named *Test.ftl* with the following content :

{{{
Hello ${name} !
}}}

and the following Java class :

{{{
public static void main(String[] args) {
	final ApplicationContext context = new ClassPathXmlApplicationContext(
			new String[] { "spring/application-context.xml" });
	final TemplaterService templaterService = context.getBean(TemplaterService.class);
	final Map<String, Object> data = new HashMap<String, Object>();
	data.put("name", "John");

	String content = null;
	try {
		content = templaterService.getContent("Test.ftl", data);
	} catch (final TemplateServiceException e) {
		e.printStackTrace();
	}
	System.out.println(content);
}
}}}	

The result :

{{{
Hello John !
}}}